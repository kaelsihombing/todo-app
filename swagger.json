{
  "swagger": "2.0",
  "info": {
    "description": "This is an API Documentation for awesome-project.",
    "version": "1.0.0",
    "title": "doDO App",
    "contact": {
      "email": "sntmcl1@gmail.com"
    }
  },
  "host": "awesome-project-glints.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user collection",
      "description": "Info for User API"
    },
    {
      "name": "task collection",
      "description": "Info for Task API"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "user collection"
        ],
        "summary": "Register new user",
        "description": "ask user for email, password, and password confirmation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersRegisterRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfuly logged in",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "example": "5e467d3a15425d00171a4cac"
                    },
                    "fullname": {
                      "example": "santo michael sihombing"
                    },
                    "email": {
                      "example": "sntmcl@gmail.com"
                    },
                    "token": {
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTQ2N2QzYTE1NDI1ZDAwMTcxYTRjYWMiLCJpYXQiOjE1ODE2Nzc4ODl9.01t5l8gh63_a6dkFIk4mQBBc4pHKiDj-QKpqmXs4Chw"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your credentials is not valid",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Password and Password Confirmation doesn't match"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user collection"
        ],
        "summary": "Update user data",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "fullname",
            "type": "string",
            "description": "fullname to be changed"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "the image to upload"
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "description": "the email to be changed"
          },
          {
            "in": "formData",
            "name": "language",
            "type": "string",
            "description": "the language to be changed (id / en )"
          }
        ],
        "responses": {
          "201": {
            "description": "Your data has been edited",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "fullname": {
                          "example": "santo michael gonzales"
                        },
                        "image": {
                          "example": "https://ik.imagekit.io/m1ke1magek1t/IMG-1581681892861_ca8TkZjDP"
                        },
                        "email": {
                          "example": "gonzales@gmail.com"
                        },
                        "language": {
                          "example": "id"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "not successfully",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "example": "error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "user collection"
        ],
        "summary": "generate token for user",
        "description": "Ask user for email and password, then if it's valid it will generate JWT Token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly logged in",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "example": "5e467d3a15425d00171a4cac"
                    },
                    "fullname": {
                      "example": "santo michael sihombing"
                    },
                    "email": {
                      "example": "sntmcl@gmail.com"
                    },
                    "token": {
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTQ2N2QzYTE1NDI1ZDAwMTcxYTRjYWMiLCJpYXQiOjE1ODE2Nzc4ODl9.01t5l8gh63_a6dkFIk4mQBBc4pHKiDj-QKpqmXs4Chw"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Not successfully login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "data": {
                  "type": "string",
                  "example": "Password is wrong"
                }
              }
            }
          }
        }
      }
    },
    "/recover": {
      "post": {
        "tags": [
          "user collection"
        ],
        "summary": "recover user password",
        "description": "Ask user for email ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "a reset email has been sent to sntmcl1@gmail.com, please check your email"
                }
              }
            }
          },
          "500": {
            "description": "failed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "task collection"
        ],
        "summary": "Create new task",
        "description": "ask authorized user for task title and dueDate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfuly created new task",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to bank"
                    },
                    "dueDate": {
                      "example": "2020-02-29T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 1
                    },
                    "importance": {
                      "example": "Low"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error due to missing parameter(s)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": {}
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "task collection"
        ],
        "summary": "View task (paginated into maximum 10 data per page)",
        "description": "ask user to login before showing user's task",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "number",
            "description": "put page number into query parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully show user's task(s)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to bank"
                    },
                    "dueDate": {
                      "example": "2020-02-29T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 1
                    },
                    "importance": {
                      "example": "Low"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "task collection"
        ],
        "summary": "Edit existing task",
        "description": "ask authorized user for task ID and desired updated parameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "put task's _id value into query parameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskEditRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfuly updated task",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to Mandiri Bank"
                    },
                    "dueDate": {
                      "example": "2020-03-31T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 3
                    },
                    "importance": {
                      "example": "High"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          },
          "422": {
            "description": "Validation error due to invalid credential or invalid task id",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid credential || invalid task id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "task collection"
        ],
        "summary": "Delete existing task",
        "description": "ask authorized user for task ID to be deleted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "put task's _id value into query parameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfuly updated task",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to Mandiri Bank"
                    },
                    "dueDate": {
                      "example": "2020-03-31T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 3
                    },
                    "importance": {
                      "example": "High"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          },
          "422": {
            "description": "Validation error due to invalid credential or invalid task id",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid credential || invalid task id"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tasks/sort/asc": {
      "get": {
        "tags": [
          "task collection"
        ],
        "summary": "View ascending sorted task",
        "description": "ask user to login before showing user's ascending sorted task",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "required": true,
            "type": "string",
            "description": "put desired sorting param (title, createdAt, dueDate, importanceLevel or completion) into query parameter"
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "number",
            "description": "put page number into query parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully show user's task(s)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to bank"
                    },
                    "dueDate": {
                      "example": "2020-02-29T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 1
                    },
                    "importance": {
                      "example": "Low"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tasks/sort/desc": {
      "get": {
        "tags": [
          "task collection"
        ],
        "summary": "View descending sorted task",
        "description": "ask user to login before showing user's descending sorted task",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "required": true,
            "type": "string",
            "description": "put desired sorting param (title, createdAt, dueDate, importanceLevel or completion) into query parameter"
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "number",
            "description": "put page number into query parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully show user's task(s)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to bank"
                    },
                    "dueDate": {
                      "example": "2020-02-29T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 1
                    },
                    "importance": {
                      "example": "Low"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tasks/filter/importance": {
      "get": {
        "tags": [
          "task collection"
        ],
        "summary": "View filtered by importanceLevel task",
        "description": "ask user to login before showing user's filtered by importanceLevel task(s)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "value",
            "required": true,
            "type": "string",
            "enum": [
              1,
              2,
              3
            ],
            "description": "put desired importanceLevel param (1, 2, or 3) into query parameter"
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "number",
            "description": "put page number into query parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully show user's filtered by importanceLevel task(s)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to bank"
                    },
                    "dueDate": {
                      "example": "2020-02-29T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 1
                    },
                    "importance": {
                      "example": "Low"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/tasks/filter/completion": {
      "get": {
        "tags": [
          "task collection"
        ],
        "summary": "View filtered by completion task",
        "description": "ask user to login before showing user's filtered by completion task(s)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "value",
            "required": true,
            "type": "string",
            "description": "put desired completion param (true or false) into query parameter"
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "number",
            "description": "put page number into query parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully show user's filtered by completion task(s)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "5e467bd899a0335d89b9fa40"
                    },
                    "title": {
                      "example": "Go to bank"
                    },
                    "dueDate": {
                      "example": "2020-02-29T00:00:00.000Z"
                    },
                    "importanceLevel": {
                      "example": 1
                    },
                    "importance": {
                      "example": "Low"
                    },
                    "owner": {
                      "example": "5e44ec2c7de7ba15424a83f8"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Validation error due to invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "example": "Invalid token"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "UsersRegisterRequest": {
      "type": "object",
      "required": [
        "fullname",
        "email",
        "password",
        "password_confirmation"
      ],
      "properties": {
        "fullname": {
          "type": "string",
          "example": "santo michael sihombing"
        },
        "email": {
          "type": "string",
          "example": "sntmcl@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "sntmcl1"
        },
        "password_confirmation": {
          "type": "string",
          "example": "sntmcl1"
        }
      }
    },
    "UsersLoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "sntmcl@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "sntmcl1"
        }
      }
    },
    "ForgotPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "sntmcl1@gmail.com"
        }
      }
    },
    "TaskCreateRequest": {
      "type": "object",
      "required": [
        "title",
        "dueDate"
      ],
      "properties": {
        "title": {
          "type": "string",
          "example": "Go to bank"
        },
        "dueDate": {
          "type": "string",
          "format": "date",
          "example": "2020-02-29",
          "description": "Min value for date is set to current date and time -> Date.now()"
        },
        "importanceLevel": {
          "type": "number",
          "enum": [
            1,
            2,
            3
          ],
          "default": 2,
          "example": 1
        }
      }
    },
    "TaskEditRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Go to Mandiri Bank"
        },
        "dueDate": {
          "type": "string",
          "format": "date",
          "example": "2020-03-01"
        },
        "importanceLevel": {
          "type": "number",
          "enum": [
            1,
            2,
            3
          ],
          "example": 3
        },
        "completion": {
          "type": "boolean",
          "example": true
        }
      },
      "description": "every parameter is optional, only passed parameter will be updated in database"
    }
  },
  "externalDocs": {
    "description": "Back-End Repository",
    "url": "https://gitlab.com/kaelsihombing/our-awesome-to-do-app"
  }
}